#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
# Source0 file verified with key 0x4F398DEAE440091C (infra-root@openstack.org)
#
Name     : oslo.reports
Version  : 2.0.0
Release  : 43
URL      : http://tarballs.openstack.org/oslo.reports/oslo.reports-2.0.0.tar.gz
Source0  : http://tarballs.openstack.org/oslo.reports/oslo.reports-2.0.0.tar.gz
Source1  : http://tarballs.openstack.org/oslo.reports/oslo.reports-2.0.0.tar.gz.asc
Summary  : oslo.reports library
Group    : Development/Tools
License  : Apache-2.0
Requires: oslo.reports-license = %{version}-%{release}
Requires: oslo.reports-python = %{version}-%{release}
Requires: oslo.reports-python3 = %{version}-%{release}
Requires: Jinja2
Requires: oslo.i18n
Requires: oslo.serialization
Requires: oslo.utils
Requires: pbr
Requires: psutil
Requires: six
BuildRequires : Jinja2
BuildRequires : buildreq-distutils3
BuildRequires : oslo.i18n
BuildRequires : oslo.serialization
BuildRequires : oslo.utils
BuildRequires : pbr
BuildRequires : psutil
BuildRequires : six

%description
========================
Team and repository tags
========================

.. image:: https://governance.openstack.org/tc/badges/oslo.reports.svg
    :target: https://governance.openstack.org/tc/reference/tags/index.html

.. Change things from this point on

===================================
oslo.reports
===================================

.. image:: https://img.shields.io/pypi/v/oslo.reports.svg
    :target: https://pypi.org/project/oslo.reports/
    :alt: Latest Version

.. image:: https://img.shields.io/pypi/dm/oslo.reports.svg
    :target: https://pypi.org/project/oslo.reports/
    :alt: Downloads

When things go wrong in (production) deployments of OpenStack collecting debug
data is a key first step in the process of triaging & ultimately resolving the
problem. Projects like Nova has extensively used logging capabilities which
produce a vast amount of data. This does not, however, enable an admin to
obtain an accurate view on the current live state of the system. For example,
what threads are running, what config parameters are in effect, and more.

The project oslo.reports hosts a general purpose error report generation
framework, known as the "guru meditation report"
(cf http://en.wikipedia.org/wiki/Guru_Meditation) to address the issues
described above.

Models: These classes define structured data for a variety of interesting
pieces of state. For example, stack traces, threads, config parameters,
package version info, etc. They are capable of being serialized to XML / JSON
or a plain text representation

Generators: These classes are used to populate the model classes with the
current runtime state of the system

Views: views serialize models into say JSON, text or xml. There is also
a predefined view that utilizes Jinja templating system.

There will be a number of standard models / generators available for all
OpenStack services

StackTraceModel: a base class for any model which includes a stack trace
ThreadModel: a class for information about a thread
ExceptionModel: a class for information about a caught exception
ConfigModel: a class for information about configuration file settings
PackageModel: a class for information about vendor/product/version/package information

Each OpenStack project will have the ability to register further generator
classes to provide custom project specific data.

* Free software: Apache license
* Documentation: https://docs.openstack.org/oslo.reports/latest
* Source: https://opendev.org/openstack/oslo.reports
* Bugs: https://bugs.launchpad.net/oslo.reports
* Release notes: https://docs.openstack.org/releasenotes/oslo.reports/

%package license
Summary: license components for the oslo.reports package.
Group: Default

%description license
license components for the oslo.reports package.


%package python
Summary: python components for the oslo.reports package.
Group: Default
Requires: oslo.reports-python3 = %{version}-%{release}

%description python
python components for the oslo.reports package.


%package python3
Summary: python3 components for the oslo.reports package.
Group: Default
Requires: python3-core
Provides: pypi(oslo.reports)

%description python3
python3 components for the oslo.reports package.


%prep
%setup -q -n oslo.reports-2.0.0
cd %{_builddir}/oslo.reports-2.0.0

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1583194624
# -Werror is for werrorists
export GCC_IGNORE_WERROR=1
export CFLAGS="$CFLAGS -fno-lto "
export FCFLAGS="$CFLAGS -fno-lto "
export FFLAGS="$CFLAGS -fno-lto "
export CXXFLAGS="$CXXFLAGS -fno-lto "
export MAKEFLAGS=%{?_smp_mflags}
python3 setup.py build

%install
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/oslo.reports
cp %{_builddir}/oslo.reports-2.0.0/LICENSE %{buildroot}/usr/share/package-licenses/oslo.reports/294b43b2cec9919063be1a3b49e8722648424779
python3 -tt setup.py build  install --root=%{buildroot}
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----

%files
%defattr(-,root,root,-)

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/oslo.reports/294b43b2cec9919063be1a3b49e8722648424779

%files python
%defattr(-,root,root,-)

%files python3
%defattr(-,root,root,-)
/usr/lib/python3*/*
